@use 'variables' as *;
@use 'sass:map';
@use 'sass:color';

$input-spacing-default: map.get($spacing, 'sm');

.app-text-field {
  position: relative;
  cursor: text;

  &,
  & [appInput] {
    width: 100%;
  }

  & .inputLabel,
  & [appInput] {
    font-size: 14px;
  }

  & [appInput] {
    padding: $input-spacing-default;
    border-radius: 4px;
  }

  & .inputLabel {
    display: block;

    &.labelPosition {
      &-top {
        margin-bottom: map.get($spacing, 'sm');
      }
    }
  }

  @each $key, $variant in $color-palette {
    @each $variant-key, $variant-color in $variant {
      $class-name: #{$key}-#{$variant-key};

      &.inputColor-#{$class-name} [appInput] {
        $text-color: $variant-color;

        @if ($key == 'secondary') {
          $text-color: map.get($color-palette, 'white', 'default');
        }

        color: $text-color;

        &::placeholder {
          $placeholder-color: $variant-color;

          @if ($key == white) {
            $placeholder-color: color.adjust($placeholder-color, $lightness: -40%);
          }

          color: $placeholder-color;
        }
      }
    }
  }

  &.inputVariant {
    &-basic {
      & [appInput] {
        padding: 0 0 $input-spacing-default;
        background: transparent;
        border-radius: 0;
      }

      @each $key, $variant in $color-palette {
        @each $variant-key, $variant-color in $variant {
          $class-name: #{$key}-#{$variant-key};

          &.inputColor-#{$class-name} [appInput] {
            $border-color: $variant-color;

            @if ($key == white) {
              $border-color: color.adjust($variant-color, $lightness: -40%);

              &:focus,
              &[data-has-value] {
                border-color: $variant-color;
              }
            }

            border-bottom: 1px solid $border-color;
          }
        }
      }
    }

    &-outlined {
      & [appInput] {
        background: transparent;
      }

      @each $key, $variant in $color-palette {
        @each $variant-key, $variant-color in $variant {
          $class-name: #{$key}-#{$variant-key};

          &.inputColor-#{$class-name} {
            & [appInput] {
              border: 1px solid $variant-color;
            }
          }
        }
      }
    }
  }

  &.textarea {
    display: flex;
    flex-direction: column;

    .inputLabel.inputLabelInside {
      top: $input-spacing-default;
      transform: translate(0, 0);
    }
  }

  &.withError {
    color: map.get($color-palette, red, variant-2);

    &[class*='inputVariant-'][class*='inputColor-'] [appInput] {
      border-color: map.get($color-palette, red, variant-2);
    }
  }
}
